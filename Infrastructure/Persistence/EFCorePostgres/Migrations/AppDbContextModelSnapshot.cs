// <auto-generated />
using System;
using EFCorePostgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EFCorePostgres.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DomainModel.Entities.Account", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.HasKey("Username");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DomainModel.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("GfmContent")
                        .HasColumnType("text");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("DomainModel.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("DomainModel.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("GfmDetails")
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text");

                    b.Property<string>("SourceCodeUrl")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DomainModel.Entities.Account", b =>
                {
                    b.OwnsMany("DomainModel.ValueObjects.AuthToken", "AuthTokens", b1 =>
                        {
                            b1.Property<string>("AccountUsername")
                                .HasColumnType("text");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("Token")
                                .HasColumnType("text");

                            b1.HasKey("AccountUsername", "Id");

                            b1.ToTable("AuthToken");

                            b1.WithOwner()
                                .HasForeignKey("AccountUsername");
                        });

                    b.OwnsOne("DomainModel.ValueObjects.PasswordCredential", "PasswordCredential", b1 =>
                        {
                            b1.Property<string>("AccountUsername")
                                .HasColumnType("text");

                            b1.Property<string>("HashedPassword")
                                .HasColumnType("text");

                            b1.Property<string>("Salt")
                                .HasColumnType("text");

                            b1.HasKey("AccountUsername");

                            b1.ToTable("Accounts");

                            b1.WithOwner()
                                .HasForeignKey("AccountUsername");
                        });

                    b.OwnsMany("DomainModel.ValueObjects.PasswordResetToken", "PasswordResetTokens", b1 =>
                        {
                            b1.Property<string>("AccountUsername")
                                .HasColumnType("text");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("Token")
                                .HasColumnType("text");

                            b1.HasKey("AccountUsername", "Id");

                            b1.ToTable("PasswordResetToken");

                            b1.WithOwner()
                                .HasForeignKey("AccountUsername");
                        });
                });

            modelBuilder.Entity("DomainModel.Entities.Post", b =>
                {
                    b.OwnsMany("DomainModel.ValueObjects.Tag", "Tags", b1 =>
                        {
                            b1.Property<Guid>("PostId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("Name")
                                .HasColumnType("text");

                            b1.HasKey("PostId", "Id");

                            b1.ToTable("Posts_Tags");

                            b1.WithOwner()
                                .HasForeignKey("PostId");
                        });
                });

            modelBuilder.Entity("DomainModel.Entities.Profile", b =>
                {
                    b.OwnsMany("DomainModel.ValueObjects.Education", "Educations", b1 =>
                        {
                            b1.Property<string>("Institution")
                                .HasColumnType("text");

                            b1.Property<string>("Department")
                                .HasColumnType("text");

                            b1.Property<string>("Description")
                                .HasColumnType("text");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<Guid>("ProfileId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("timestamp without time zone");

                            b1.HasKey("Institution", "Department");

                            b1.HasIndex("ProfileId");

                            b1.ToTable("Education");

                            b1.WithOwner()
                                .HasForeignKey("ProfileId");
                        });

                    b.OwnsMany("DomainModel.ValueObjects.Skill", "Skills", b1 =>
                        {
                            b1.Property<string>("Name")
                                .HasColumnType("text");

                            b1.Property<string>("Description")
                                .HasColumnType("text");

                            b1.Property<Guid>("ProfileId")
                                .HasColumnType("uuid");

                            b1.Property<double>("Progress")
                                .HasColumnType("double precision");

                            b1.HasKey("Name");

                            b1.HasIndex("ProfileId");

                            b1.ToTable("Skill");

                            b1.WithOwner()
                                .HasForeignKey("ProfileId");

                            b1.OwnsOne("DomainModel.ValueObjects.SkillType", "SkillType", b2 =>
                                {
                                    b2.Property<string>("SkillName")
                                        .HasColumnType("text");

                                    b2.Property<string>("Name")
                                        .HasColumnType("text");

                                    b2.HasKey("SkillName");

                                    b2.ToTable("Skill");

                                    b2.WithOwner()
                                        .HasForeignKey("SkillName");
                                });
                        });
                });

            modelBuilder.Entity("DomainModel.Entities.Project", b =>
                {
                    b.OwnsMany("DomainModel.ValueObjects.Tag", "Tags", b1 =>
                        {
                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("Name")
                                .HasColumnType("text");

                            b1.HasKey("ProjectId", "Id");

                            b1.ToTable("Projects_Tags");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
